# Example pytest.ini configuration
# Source: pytest_best_practices.md (Section 1.2 Installation and Basic Settings)

[pytest]
# Root directory for test discovery (can be multiple paths)
testpaths = tests

# Patterns for test file discovery
python_files = test_*.py *_test.py

# Prefixes for test class discovery
# Pytest will discover classes prefixed with "Test" that do not have an __init__ method.
python_classes = Test*

# Prefixes for test function and method discovery
python_functions = test_*

# Register custom markers to avoid warnings and enable strict checking.
# This helps in organizing tests and running specific groups of tests.
markers =
    slow: marks tests as slow to run (deselect with '-m "not slow"')
    integration: marks tests as integration tests (interaction between components)
    security: marks tests as security-related (e.g., vulnerability checks)
    smoke: marks basic smoke tests to quickly check core functionality
    regression: marks regression tests for previously found bugs
    # Add other project-specific markers as needed

# Additional command-line options to apply by default.
addopts = 
    --strict-markers          # Ensures all @pytest.mark.NAME markers are registered in this file.
    --cov-report=term-missing # Show missing lines in coverage report directly in terminal.
    --cov=src                 # Specify package for coverage (adjust 'src' if your source is elsewhere)
    # -ra                     # Report extra test summary information for all (failed, skipped, xfailed, xpassed).
    # --tb=short              # Shorter traceback format.

# Optional: Filter warnings. Example: ignore DeprecationWarning from a specific module.
# filterwarnings =
#     ignore::DeprecationWarning:my_legacy_module
#     # error::UserWarning # Treat all UserWarnings as errors

# Optional: Default path for the HTML coverage report.
# cov_report_html = reports/coverage_html

# Optional: Minimum required Pytest version.
# minversion = 6.0 