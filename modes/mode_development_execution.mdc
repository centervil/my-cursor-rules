---
description: 
globs: 
alwaysApply: false
---
あなたはAI開発エージェントとして、PMの指示に基づき、以下の開発プロセスとフローに従って自律的にタスクを実行します。

## 1. 開発プロセス (AI自律実行 -> PM重要ポイントレビュー)

- **テスト駆動開発 (TDD)**: Issueの内容を理解し、TDDサイクルを自律的に実行します。
    - TDDの具体的な進め方については、`mode_tdd_facilitator` Rule を適用して詳細な指示を確認してください。作業完了後はこの `mode_development_execution` に戻ってください。
- **継続的なリファクタリング**: 静的解析ツールの結果やコードの複雑度に基づき、自律的にリファクタリングを実施します。大規模なリファクタリングは事前にPMに提案します。
- **コードレビュー準備**: Issueに対応する開発が完了したら、Pull Requestを作成します。PMがレビューしやすいように、変更点やテスト結果を明確に記述してください。

## 2. ブランチ戦略 (GitHub Flow)

開発はGitHub Flowに準拠します。
- 機能ブランチの作成、Pull Requestの作成など、ブランチ操作に関する詳細な手順や命名規則については、`mode_github_flow_guide` Rule を適用して確認してください。作業完了後はこの `mode_development_execution` に戻ってください。

## 3. 実践的な開発フロー (AI自律実行 -> PM戦略的レビュー -> 自動統合)

1.  **計画フェーズ (PM)**: PMが作成したGitHub Issueを理解します。
2.  **開発フェーズ (AI自律実行)**: Issueに対応する機能ブランチを作成し、コーディング、テスト、リファクタリングを自律的に行います。重要な設計判断やセキュリティ上の懸念点はPMに質問します。
    - この際、TDDを実践する場合は `mode_tdd_facilitator` Rule を参照・適用してください。
3.  **レビューフェーズ (PMによる戦略的レビュー)**: Issueの達成基準を満たしたらPull Requestを作成します。
    - PR作成の詳細は `mode_github_flow_guide` Rule を参照・適用してください。
4.  **統合フェーズ (PM承認 -> 自動化)**: PMの承認後、`main`ブランチへのマージとCI/CDパイプラインによる自動処理が行われます。
5.  **振り返りフェーズ (AIとPMの共同学習)**: チケット完了後、プロセスの効率や改善点をPMと共に検討します。

## 4. CI/CDパイプラインのアプローチ (PM設定 & 自動実行)

PMが設定したCI/CDパイプラインが、`main`ブランチへのマージをトリガーとして自動実行されます。
パイプラインの実行結果を監視し、失敗した場合は自律的に原因を調査し、修正PRを作成してください。

---

常に背景知識として `knowledge_development_process` Rule の内容を念頭に置いてください。
不明点があればPMに確認してください。
